swagger: '2.0'
host: swagger.io
basePath: /
info:
  title: Swagger Sample App
  description: This is a sample server Petstore server.
  termsOfService: http://swagger.io/terms/
  contact:
    name: API Support
    url: http://www.swagger.io/support
    email: support@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1

schemes:
 - https

consumes:
  - application/json

produces:
  - application/json

paths:
  /pets:
    get:
      summary: Get a list of pets
      description: Retrieve a list of pets
      parameters:
        - $ref: '#/parameters/page-size'
        - $ref: '#/parameters/page-number'
      responses:
        200:
          description: Returns a list of pets.
          schema:
            $ref: '#/definitions/Pets'
        400:
          $ref: '#/responses/RequestErrorResponse'
        500:
          $ref: '#/responses/ServerErrorResponse'
        default:
          $ref: '#/responses/UnknownResponse'
    post:
      summary: Add pet to DB
      description: Results in new pet information added to the DB
      parameters:
        - name: pet
          in: body
          description: Pet details
          schema:
            required: [name, status]
            properties:
              name:
                type: string
                description: The pet name
              status:
                type: string
                description: The pet status
      responses:
        201:
          description: Created new pet in the database
          schema:
            required: [pet-id]
            properties:
              pet-id:
                type: number
                description: Unique Id for the pet in the system
        400:
          $ref: '#/responses/RequestErrorResponse'
        500:
          $ref: '#/responses/ServerErrorResponse'
        default:
          $ref: '#/responses/UnknownResponse'
  /pets/{pet-id}:
    parameters:
      - $ref: '#/parameters/pet-id'
    get:
      summary: Retrieve pet details
      description: Get details of a pet previously registered
      responses:
        200:
          description: Returns a specific talk
          schema:
            $ref: '#/definitions/Pet'
          examples:
            application/json:
              {
                id: 12345,
                name: "pythagoras",
                status: "Adopted"
              }
    put:
      summary: Update pet details
      description: Update details for previously registered pet
      parameters:
        - name: pet
          in: body
          description: Details to update
          schema:
            $ref: '#/definitions/Pet'
      responses:
        200:
          description: Pet details updated
        400:
          $ref: '#/responses/RequestErrorResponse'
        500:
          $ref: '#/responses/ServerErrorResponse'
        default:
          $ref: '#/responses/UnknownResponse'
    delete:
      summary: Remove a pet
      description: Remove the pet details from DB
      responses:
        200:
          description: Pet removed
        400:
          $ref: '#/responses/RequestErrorResponse'
        500:
          $ref: '#/responses/ServerErrorResponse'
        default:
          $ref: '#/responses/UnknownResponse'

parameters:
  pet-id:
    name: pet-id
    in: path
    description: Pet identifier
    type: number
    required: true
  page-size:
    name: page-size
    in: query
    description: Number of items
    type: integer
    format: int32
    minimum: 1
    maximum: 100
    multipleOf: 10
    default: 10
  page-number:
    name: page-number
    in: query
    description: Paginated page number
    type: integer
    format: int32
    minimum: 1
    default: 1

definitions:
  Pet:
    type: object
    required: [id, title, speaker-id, abstract, duration]
    properties:
      id:
        type: integer
        format: int32
        description: Unique id for the talk
        readOnly: true
      title:
        type: string
        pattern: "[a-zA-Z0-9]{20, 144}"
        description: Title for talk
        minimum: 20
        maximum: 144
      speaker-id:
        type: integer
        format: int32
        description: Speaker identification in the system
      abstract:
        type: string
        pattern: "[a-zA-Z0-9]{100, 500}"
        minimum: 100
        maximum: 500
        description: The talk abstract
      duration:
        type: integer
        pattern: int32
        default: 60
        minimum: 45
        maximum: 90
        multipleOf: 15
        description: Requested talk duration
      comments:
        type: string
        pattern: "[a-zA-Z0-9]{100, 500}"
        minimum: 100
        maximum: 500
        description: Additional information added by the speaker
      scheduled-on:
        type: string
        format: date-time
        readOnly: true
  Pets:
    type: array
    items:
      $ref: "#/definitions/Pet"
  Error:
    properties:
      code:
        type: integer
      message:
        type: string

responses:
  UnknownResponse:
    description: This response is not yet docuemtned by this API.
  ServerErrorResponse:
    description: Server error during request.
    schema:
      $ref: "#/definitions/Error"
  RequestErrorResponse:
    description: Invalid request.
    schema:
      $ref: "#/definitions/Error"